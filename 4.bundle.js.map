{"version":3,"sources":["webpack:///./src/components/Editor/Loadable.ts","webpack:///./src/components/Slide/Loadable.ts","webpack:///./src/components/Preview/Slideshow.ts","webpack:///./src/components/Preview/worker.ts","webpack:///./src/components/Preview/markdown-worker.ts","webpack:///./src/components/Preview/useTrackPreviewScroll.ts","webpack:///./src/components/Preview/index.tsx","webpack:///./src/components/Preview/useMarkdownWorker.ts","webpack:///./src/components/Preview/useSyncPreview.ts","webpack:///./src/components/Toolbar/Loadable.ts","webpack:///./src/components/Home/usePresentation.ts","webpack:///./src/components/Home/usePresentationSlideNavigation.ts","webpack:///./src/components/Home/index.tsx","webpack:///./src/components/Editor/TextArea.ts","webpack:///./src/utils/usePaneIsActive.ts"],"names":["Editor","loadable","then","module","default","Slide","Slideshow","styled","article","Worker","MarkdownWorker","dispatch","this","worker","onmessage","data","type","MarkdownContextReducerActionType","SetHtmlArray","htmlArray","md","postMessage","terminate","useTrackPreviewScroll","entries","isActive","ref","handleScroll","useMemo","throttle","line","withinBounds","R","TEXT_AREA_LINE_HEIGHT","topElement","Object","find","entry","getBoundingClientRect","top","parseInt","SetPreviewCodeLine","previewCodeLine","node","current","useEffect","addEventListener","passive","removeEventListener","Column","div","Preview","memo","forwardRef","_props","useMarkdownDispatch","useMarkdownState","editorLine","usePaneIsActive","initialValue","useCodeLineEntries","workerRef","useRef","_a","parse","useMarkdownWorker","dataLineElement","scrollIntoView","block","useSyncPreview","id","map","html","i","key","htmlString","index","Toolbar","usePresentation","slideshowRef","useState","isPresented","setIsPresented","dismiss","useCallback","present","slideNumber","setSlideNumber","slideEntries","useSlideEntries","slideCount","keys","length","nextSlide","previousSlide","handleKeyDown","ev","preventDefault","keyCode","document","useSlideNavigation","requestPresentation","screenfull","request","sf","togglePresentation","isFullscreen","on","off","Body","Container","props","theme","toolbarHeight","Home","TextArea","textarea","editorBackgroundColor","textColor","setIsActive","debounceSetIsActive","debounce","value","handleMouseEnter","handleMouseLeave"],"mappings":"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","file":"4.bundle.js","sourcesContent":["/**\n * Asynchronously loads the component for Editor\n */\nimport { loadable } from \"utils/loadable\";\nconst Editor = loadable(() => import(\"./index\").then((module) => ({ default: module.Editor })));\nexport { Editor };\n","/**\n * Asynchronously loads the component for Slide\n */\nimport { loadable } from \"utils/loadable\";\nconst Slide = loadable(() => import(\"./index\").then((module) => ({ default: module.Slide })));\nexport { Slide };\n","import styled from \"styled-components\";\nconst Slideshow = styled.article `\n  height: 100%;\n  overflow: auto;\n\n  &:fullscreen {\n    scroll-snap-type: y mandatory;\n\n    .slide {\n      border: none;\n      box-shadow: none;\n      display: grid;\n      height: 100%;\n      margin: 0;\n      scroll-snap-align: start;\n\n      svg {\n        margin: auto;\n      }\n    }\n  }\n\n  &:-webkit-full-screen {\n    background-color: rgba(255, 255, 255, 0);\n    scroll-snap-type: y mandatory;\n\n    .slide {\n      border: none;\n      box-shadow: none;\n      display: grid;\n      height: 100%;\n      margin: 0;\n      scroll-snap-align: start;\n\n      svg {\n        margin: auto;\n      }\n    }\n  }\n`;\nexport { Slideshow };\n","export default function() {\n  return new Worker(__webpack_public_path__ + \"bundle.worker.js\");\n}\n","import Worker from \"worker-loader!./worker\"; // eslint-disable-line\nimport { MarkdownContextReducerActionType, } from \"types/markdown-context-reducer-action\";\nexport default class MarkdownWorker {\n    constructor(dispatch) {\n        this.worker = new Worker();\n        this.worker.onmessage = ({ data }) => dispatch({\n            type: MarkdownContextReducerActionType.SetHtmlArray,\n            htmlArray: data,\n        });\n    }\n    parse(md) {\n        this.worker.postMessage(md);\n    }\n    terminate() {\n        if (this.worker)\n            this.worker.terminate();\n    }\n}\n","import { useEffect, useMemo } from \"react\";\nimport * as R from \"ramda\";\nimport throttle from \"lodash/throttle\";\nimport { MarkdownContextReducerActionType, } from \"types/markdown-context-reducer-action\";\nimport { TEXT_AREA_LINE_HEIGHT } from \"components/Editor/TextArea\";\nfunction useTrackPreviewScroll({ dispatch, entries, isActive, ref, }) {\n    /*\n     * Finds the top most element in view (within 0px - 18px from the top)\n     * IF element THEN set `previewCodeLine` to it's data-line number\n     */\n    const handleScroll = useMemo(() => throttle(() => {\n        const withinBounds = R.both(R.gte(R.__, 0), R.lte(R.__, TEXT_AREA_LINE_HEIGHT));\n        const isTopElement = (e) => withinBounds(e.getBoundingClientRect().top);\n        const setPreviewCodeLine = (line) => dispatch({\n            type: MarkdownContextReducerActionType.SetPreviewCodeLine,\n            previewCodeLine: line,\n        });\n        const topElement = Object.entries(entries).find(([, entry]) => isTopElement(entry));\n        if (topElement)\n            setPreviewCodeLine(parseInt(topElement[0], 10));\n    }, 100), [dispatch, entries]);\n    const node = ref === null || ref === void 0 ? void 0 : ref.current;\n    /* Adds/Removes event listener on 'scroll' depending on pane `isActive` */\n    useEffect(() => {\n        isActive\n            ? node === null || node === void 0 ? void 0 : node.addEventListener(\"scroll\", handleScroll, { passive: true }) : node === null || node === void 0 ? void 0 : node.removeEventListener(\"scroll\", handleScroll);\n        return () => node === null || node === void 0 ? void 0 : node.removeEventListener(\"scroll\", handleScroll);\n    }, [isActive, handleScroll, node]);\n}\nexport { useTrackPreviewScroll };\n","import React, { forwardRef, memo } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  useMarkdownDispatch,\n  useMarkdownState,\n} from \"contexts/MarkdownContext\";\nimport { useCodeLineEntries } from \"contexts/CodeLineObserver\";\nimport { usePaneIsActive } from \"utils/usePaneIsActive\";\n\nimport { Slide } from \"components/Slide/Loadable\";\nimport { Slideshow } from \"./Slideshow\";\n\nimport { useMarkdownWorker } from \"./useMarkdownWorker\";\nimport { useSyncPreview } from \"./useSyncPreview\";\nimport { useTrackPreviewScroll } from \"./useTrackPreviewScroll\";\n\nconst Column = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst Preview = memo(\n  forwardRef<HTMLElement>(function Preview(_props, ref) {\n    const dispatch = useMarkdownDispatch();\n    const { htmlArray, md, editorLine } = useMarkdownState();\n\n    const isActive = usePaneIsActive({ ref, initialValue: false });\n    const entries = useCodeLineEntries();\n\n    useMarkdownWorker({ dispatch, md });\n    useSyncPreview({ entries, editorLine });\n    useTrackPreviewScroll({ dispatch, entries, isActive, ref });\n\n    return (\n      <Column id=\"preview\">\n        {md === \"\" ? null : (\n          <Slideshow ref={ref} id=\"slideshow\">\n            {htmlArray.map((html, i) => (\n              <Slide key={`slide-${i + 1}`} htmlString={html} index={i} />\n            ))}\n          </Slideshow>\n        )}\n      </Column>\n    );\n  })\n);\n\nexport { Preview };\n","import { useEffect, useRef } from \"react\";\nimport MarkdownWorker from \"./markdown-worker\";\nfunction useMarkdownWorker({ dispatch, md }) {\n    const workerRef = useRef(null);\n    useEffect(() => {\n        workerRef.current = new MarkdownWorker(dispatch);\n        return () => {\n            var _a;\n            (_a = workerRef.current) === null || _a === void 0 ? void 0 : _a.terminate();\n        };\n    }, [dispatch]);\n    useEffect(() => {\n        const worker = workerRef.current;\n        worker === null || worker === void 0 ? void 0 : worker.parse(md);\n    }, [md]);\n}\nexport { useMarkdownWorker };\n","import { useEffect } from \"react\";\nimport scrollIntoView from \"smooth-scroll-into-view-if-needed\";\nfunction useSyncPreview({ entries, editorLine }) {\n    /* Syncs preview when editorLine changes */\n    useEffect(() => {\n        const dataLineElement = entries[editorLine];\n        if (dataLineElement)\n            scrollIntoView(dataLineElement, { block: \"start\" });\n    }, [entries, editorLine]);\n}\nexport { useSyncPreview };\n","/**\n * Asynchronously loads the component for Toolbar\n */\nimport { loadable } from \"utils/loadable\";\nconst Toolbar = loadable(() => import(\"./index\").then((module) => ({ default: module.Toolbar })));\nexport { Toolbar };\n","import { useCallback, useEffect, useState } from \"react\";\nimport screenfull from \"screenfull\";\nimport { useSlideNavigation } from \"./usePresentationSlideNavigation\";\nfunction usePresentation(slideshowRef) {\n    const [isPresented, setIsPresented] = useState(false);\n    const dismiss = useCallback(() => setIsPresented(false), []);\n    const present = useCallback(() => setIsPresented(true), []);\n    useSlideNavigation(isPresented);\n    const requestPresentation = useCallback(() => {\n        const node = slideshowRef === null || slideshowRef === void 0 ? void 0 : slideshowRef.current;\n        if (node)\n            screenfull.request(node);\n    }, [slideshowRef]);\n    useEffect(() => {\n        const sf = screenfull; // for Typescript\n        const togglePresentation = () => (sf.isFullscreen ? present() : dismiss());\n        sf.on(\"change\", togglePresentation);\n        return () => sf.off(\"change\", togglePresentation);\n    }, [dismiss, present]);\n    return requestPresentation;\n}\nexport { usePresentation };\n","import { useCallback, useEffect, useState } from \"react\";\nimport scrollIntoView from \"smooth-scroll-into-view-if-needed\";\nimport { useSlideEntries } from \"contexts/SlideObserver\";\nconst INITIAL_SLIDE_NUMBER = 1;\nfunction useSlideNavigation(isPresented) {\n    const [slideNumber, setSlideNumber] = useState(INITIAL_SLIDE_NUMBER);\n    const slideEntries = useSlideEntries();\n    const slideCount = Object.keys(slideEntries).length;\n    // Resets slide number when isPresented updates\n    useEffect(() => setSlideNumber(INITIAL_SLIDE_NUMBER), [isPresented]);\n    // Scrolls to slide when slide number updates\n    useEffect(() => {\n        if (isPresented)\n            scrollIntoView(slideEntries[slideNumber]);\n    }, [isPresented, slideNumber, slideEntries]);\n    const nextSlide = useCallback(() => setSlideNumber((current) => current < slideCount ? current + 1 : current), [slideCount]);\n    const previousSlide = useCallback(() => setSlideNumber((current) => current > INITIAL_SLIDE_NUMBER ? current - 1 : current), []);\n    // Keydown slide navigation\n    useEffect(() => {\n        const handleKeyDown = (ev) => {\n            ev.preventDefault();\n            switch (ev.keyCode) {\n                case 37: // ArrowLeft\n                case 38: // ArrowUp\n                    previousSlide();\n                    break;\n                case 39: // ArrowRight\n                case 40: // ArrowDown\n                    nextSlide();\n                    break;\n                default: {\n                    break;\n                }\n            }\n        };\n        isPresented\n            ? document.addEventListener(\"keydown\", handleKeyDown)\n            : document.removeEventListener(\"keydown\", handleKeyDown);\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\n    }, [nextSlide, previousSlide, isPresented]);\n    return slideNumber;\n}\nexport { INITIAL_SLIDE_NUMBER, useSlideNavigation };\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Editor } from \"components/Editor/Loadable\";\nimport { Preview } from \"components/Preview\";\nimport { Toolbar } from \"components/Toolbar/Loadable\";\n\nimport { usePresentation } from \"./usePresentation\";\n\nconst Body = styled.div`\n  height: 100%;\n`;\nconst Container = styled.div`\n  display: flex;\n  height: 100%;\n  padding-bottom: ${(props) => props.theme.toolbarHeight + 2}px;\n`;\n\nconst Home: React.FC = () => {\n  const slideshowRef = useRef<HTMLElement>(null);\n  const requestPresentation = usePresentation(slideshowRef);\n\n  return (\n    <Body id=\"main\">\n      <Container>\n        <Editor />\n        <Preview ref={slideshowRef} />\n      </Container>\n\n      <Toolbar requestPresentation={requestPresentation} />\n    </Body>\n  );\n};\n\nexport { Home };\n","import styled from \"styled-components\";\nconst TEXT_AREA_LINE_HEIGHT = 18;\nconst TextArea = styled.textarea `\n  background-color: ${(props) => props.theme.editorBackgroundColor};\n  border: none;\n  color: ${(props) => props.theme.textColor};\n  font-size: 15px;\n  height: 100%;\n  line-height: ${TEXT_AREA_LINE_HEIGHT}px;\n  outline: none;\n  padding: 0.5em;\n  resize: none;\n  tab-size: 2;\n  width: 100%;\n\n  /* firefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=748518 */\n  @supports not (-moz-appearance: none) {\n    padding-bottom: 90vh;\n  }\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n`;\nexport { TEXT_AREA_LINE_HEIGHT, TextArea };\n","import { useEffect, useState } from \"react\";\nimport debounce from \"lodash/debounce\";\nfunction usePaneIsActive({ ref, initialValue }) {\n    const [isActive, setIsActive] = useState(initialValue);\n    const node = ref === null || ref === void 0 ? void 0 : ref.current;\n    useEffect(() => {\n        const debounceSetIsActive = debounce((value) => setIsActive(value), 300);\n        const handleMouseEnter = () => debounceSetIsActive(true);\n        const handleMouseLeave = () => debounceSetIsActive(false);\n        node === null || node === void 0 ? void 0 : node.addEventListener(\"mouseenter\", handleMouseEnter);\n        node === null || node === void 0 ? void 0 : node.addEventListener(\"mouseleave\", handleMouseLeave);\n        return () => {\n            node === null || node === void 0 ? void 0 : node.removeEventListener(\"mouseenter\", handleMouseEnter);\n            node === null || node === void 0 ? void 0 : node.removeEventListener(\"mouseleave\", handleMouseLeave);\n        };\n    }, [node, setIsActive]);\n    return isActive;\n}\nexport { usePaneIsActive };\n"],"sourceRoot":""}