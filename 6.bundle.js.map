{"version":3,"sources":["webpack:///./node_modules/ramda/es/internal/_isInteger.js","webpack:///./node_modules/ramda/es/nth.js","webpack:///./node_modules/ramda/es/paths.js","webpack:///./node_modules/ramda/es/path.js","webpack:///./node_modules/ramda/es/prop.js","webpack:///./node_modules/ramda/es/multiply.js","webpack:///./node_modules/ramda/es/curry.js","webpack:///./node_modules/ramda/es/internal/_pipe.js","webpack:///./node_modules/ramda/es/internal/_curry3.js","webpack:///./node_modules/ramda/es/reduce.js","webpack:///./node_modules/ramda/es/internal/_checkForMethod.js","webpack:///./node_modules/ramda/es/slice.js","webpack:///./node_modules/ramda/es/tail.js","webpack:///./node_modules/ramda/es/pipe.js","webpack:///./node_modules/ramda/es/unless.js","webpack:///./node_modules/ramda/es/isNil.js","webpack:///./node_modules/ramda/es/divide.js","webpack:///./src/components/Editor/index.tsx","webpack:///./src/components/Editor/useSyncEditor.ts","webpack:///./src/components/Editor/useTrackEditorScroll.ts"],"names":["Number","n","_curry2","offset","list","idx","length","_isString","charAt","pathsArray","obj","map","paths","p","val","_isInteger","pathAr","a","b","_curry1","fn","curryN","_pipe","f","g","call","this","apply","arguments","_curry3","f3","c","_isPlaceholder","_b","_c","_a","_checkForMethod","methodname","_isArray","Array","prototype","slice","fromIndex","toIndex","Infinity","pipe","Error","_arity","pred","whenFalseFn","x","Column","styled","div","Editor","memo","ref","useRef","dispatch","useMarkdownDispatch","useMarkdownState","md","previewCodeLine","isActive","usePaneIsActive","initialValue","textAreaLineHeight","useEffect","getNode","R","calculateScrollTop","setScrollTop","scrollTop","useSyncEditor","TEXT_AREA_LINE_HEIGHT","handleScroll","useMemo","throttle","ev","editorLine","Math","floor","type","MarkdownContextReducerActionType","SetEditorLine","node","current","addEventListener","passive","removeEventListener","useTrackEditorScroll","id","TextArea","autoFocus","name","onChange","SetMd","target","value","onKeyDown","keyCode","start","selectionStart","end","selectionEnd","substring","preventDefault"],"mappings":"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","file":"6.bundle.js","sourcesContent":["/**\n * Determine if the passed argument is an integer.\n *\n * @private\n * @param {*} n\n * @category Type\n * @return {Boolean}\n */\nexport default Number.isInteger || function _isInteger(n) {\n  return n << 0 === n;\n};","import _curry2 from \"./internal/_curry2.js\";\nimport _isString from \"./internal/_isString.js\";\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\nvar nth =\n/*#__PURE__*/\n_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\n\nexport default nth;","import _curry2 from \"./internal/_curry2.js\";\nimport _isInteger from \"./internal/_isInteger.js\";\nimport nth from \"./nth.js\";\n/**\n * Retrieves the values at given paths of an object.\n *\n * @func\n * @memberOf R\n * @since v0.27.1\n * @category Object\n * @typedefn Idx = [String | Int]\n * @sig [Idx] -> {a} -> [a | Undefined]\n * @param {Array} pathsArray The array of paths to be fetched.\n * @param {Object} obj The object to retrieve the nested properties from.\n * @return {Array} A list consisting of values at paths specified by \"pathsArray\".\n * @see R.path\n * @example\n *\n *      R.paths([['a', 'b'], ['p', 0, 'q']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, 3]\n *      R.paths([['a', 'b'], ['p', 'r']], {a: {b: 2}, p: [{q: 3}]}); //=> [2, undefined]\n */\n\nvar paths =\n/*#__PURE__*/\n_curry2(function paths(pathsArray, obj) {\n  return pathsArray.map(function (paths) {\n    var val = obj;\n    var idx = 0;\n    var p;\n\n    while (idx < paths.length) {\n      if (val == null) {\n        return;\n      }\n\n      p = paths[idx];\n      val = _isInteger(p) ? nth(p, val) : val[p];\n      idx += 1;\n    }\n\n    return val;\n  });\n});\n\nexport default paths;","import _curry2 from \"./internal/_curry2.js\";\nimport paths from \"./paths.js\";\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop, R.nth\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n *      R.path(['a', 'b', 0], {a: {b: [1, 2, 3]}}); //=> 1\n *      R.path(['a', 'b', -2], {a: {b: [1, 2, 3]}}); //=> 2\n */\n\nvar path =\n/*#__PURE__*/\n_curry2(function path(pathAr, obj) {\n  return paths([pathAr], obj)[0];\n});\n\nexport default path;","import _curry2 from \"./internal/_curry2.js\";\nimport path from \"./path.js\";\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig Idx -> {s: a} -> a | Undefined\n * @param {String|Number} p The property name or array index\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path, R.nth\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.prop(0, [100]); //=> 100\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop =\n/*#__PURE__*/\n_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\n\nexport default prop;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Multiplies two numbers. Equivalent to `a * b` but curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a * b`.\n * @see R.divide\n * @example\n *\n *      const double = R.multiply(2);\n *      const triple = R.multiply(3);\n *      double(3);       //=>  6\n *      triple(4);       //=> 12\n *      R.multiply(2, 5);  //=> 10\n */\n\nvar multiply =\n/*#__PURE__*/\n_curry2(function multiply(a, b) {\n  return a * b;\n});\n\nexport default multiply;","import _curry1 from \"./internal/_curry1.js\";\nimport curryN from \"./curryN.js\";\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\nvar curry =\n/*#__PURE__*/\n_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\n\nexport default curry;","export default function _pipe(f, g) {\n  return function () {\n    return g.call(this, f.apply(this, arguments));\n  };\n}","import _curry1 from \"./_curry1.js\";\nimport _curry2 from \"./_curry2.js\";\nimport _isPlaceholder from \"./_isPlaceholder.js\";\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\nexport default function _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}","import _curry3 from \"./internal/_curry3.js\";\nimport _reduce from \"./internal/_reduce.js\";\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\nvar reduce =\n/*#__PURE__*/\n_curry3(_reduce);\n\nexport default reduce;","import _isArray from \"./_isArray.js\";\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n\n    if (length === 0) {\n      return fn();\n    }\n\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry3 from \"./internal/_curry3.js\";\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\nvar slice =\n/*#__PURE__*/\n_curry3(\n/*#__PURE__*/\n_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\n\nexport default slice;","import _checkForMethod from \"./internal/_checkForMethod.js\";\nimport _curry1 from \"./internal/_curry1.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\n\nvar tail =\n/*#__PURE__*/\n_curry1(\n/*#__PURE__*/\n_checkForMethod('tail',\n/*#__PURE__*/\nslice(1, Infinity)));\n\nexport default tail;","import _arity from \"./internal/_arity.js\";\nimport _pipe from \"./internal/_pipe.js\";\nimport reduce from \"./reduce.js\";\nimport tail from \"./tail.js\";\n/**\n * Performs left-to-right function composition. The first argument may have\n * any arity; the remaining arguments must be unary.\n *\n * In some libraries this function is named `sequence`.\n *\n * **Note:** The result of pipe is not automatically curried.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n * @param {...Function} functions\n * @return {Function}\n * @see R.compose\n * @example\n *\n *      const f = R.pipe(Math.pow, R.negate, R.inc);\n *\n *      f(3, 4); // -(3^4) + 1\n * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))\n */\n\nexport default function pipe() {\n  if (arguments.length === 0) {\n    throw new Error('pipe requires at least one argument');\n  }\n\n  return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n}","import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;","import _curry1 from \"./internal/_curry1.js\";\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\nvar isNil =\n/*#__PURE__*/\n_curry1(function isNil(x) {\n  return x == null;\n});\n\nexport default isNil;","import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides two numbers. Equivalent to `a / b`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The first value.\n * @param {Number} b The second value.\n * @return {Number} The result of `a / b`.\n * @see R.multiply\n * @example\n *\n *      R.divide(71, 100); //=> 0.71\n *\n *      const half = R.divide(R.__, 2);\n *      half(42); //=> 21\n *\n *      const reciprocal = R.divide(1);\n *      reciprocal(4);   //=> 0.25\n */\n\nvar divide =\n/*#__PURE__*/\n_curry2(function divide(a, b) {\n  return a / b;\n});\n\nexport default divide;","import React, { memo, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  useMarkdownDispatch,\n  useMarkdownState,\n} from \"contexts/MarkdownContext\";\nimport { MarkdownContextReducerActionType } from \"types/markdown-context-reducer-action\";\n\nimport { usePaneIsActive } from \"utils/usePaneIsActive\";\n\nimport { TEXT_AREA_LINE_HEIGHT, TextArea } from \"./TextArea\";\nimport { useSyncEditor } from \"./useSyncEditor\";\nimport { useTrackEditorScroll } from \"./useTrackEditorScroll\";\n\nconst Column = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst Editor = memo(function Editor() {\n  const ref = useRef<HTMLTextAreaElement>(null);\n\n  const dispatch = useMarkdownDispatch();\n  const { md, previewCodeLine } = useMarkdownState();\n\n  const isActive = usePaneIsActive({ ref, initialValue: true });\n\n  useSyncEditor({\n    ref,\n    previewCodeLine,\n    textAreaLineHeight: TEXT_AREA_LINE_HEIGHT,\n  });\n  useTrackEditorScroll({\n    dispatch,\n    isActive,\n    ref,\n    textAreaLineHeight: TEXT_AREA_LINE_HEIGHT,\n  });\n\n  const handleInputChange = (ev) => {\n    dispatch({\n      type: MarkdownContextReducerActionType.SetMd,\n      md: ev.target.value,\n    });\n  };\n  const handleKeyDown = (ev) => {\n    // support tabs\n    if (ev.keyCode === 9) {\n      const { target } = ev;\n      const val = target.value;\n      const start = target.selectionStart;\n      const end = target.selectionEnd;\n\n      target.value = `${val.substring(0, start)}\\t${val.substring(end)}`;\n      target.selectionStart = target.selectionEnd = start + 1; // eslint-disable-line no-multi-assign\n\n      ev.preventDefault();\n    }\n  };\n\n  return (\n    <Column id=\"editor\">\n      <TextArea\n        ref={ref}\n        autoFocus\n        id=\"md-textarea\"\n        name=\"md\"\n        onChange={handleInputChange}\n        onKeyDown={handleKeyDown}\n        value={md}\n      />\n    </Column>\n  );\n});\n\nexport { TEXT_AREA_LINE_HEIGHT, Editor };\n","import { useEffect } from \"react\";\nimport * as R from \"ramda\";\nfunction useSyncEditor({ ref, previewCodeLine, textAreaLineHeight, }) {\n    /* Syncs text when previewCodeLine changes */\n    useEffect(() => {\n        const getNode = R.prop(\"current\");\n        const calculateScrollTop = R.multiply(textAreaLineHeight, previewCodeLine);\n        // TODO smooth scrolling\n        const setScrollTop = R.curry((scrollTop, n) => {\n            n.scrollTop = scrollTop; // eslint-disable-line no-param-reassign\n        });\n        R.pipe(getNode, R.unless(R.isNil, setScrollTop(calculateScrollTop)))(ref);\n    }, [ref, previewCodeLine, textAreaLineHeight]);\n}\nexport { useSyncEditor };\n","import { useEffect, useMemo } from \"react\";\nimport * as R from \"ramda\";\nimport throttle from \"lodash/throttle\";\nimport { MarkdownContextReducerActionType, } from \"types/markdown-context-reducer-action\";\nfunction useTrackEditorScroll({ dispatch, isActive, ref, textAreaLineHeight, }) {\n    const handleScroll = useMemo(() => throttle((ev) => {\n        const getScrollTop = R.path([\"target\", \"scrollTop\"]);\n        const calculateLine = R.divide(R.__, textAreaLineHeight);\n        const editorLine = R.pipe(getScrollTop, calculateLine, Math.floor)(ev);\n        dispatch({\n            type: MarkdownContextReducerActionType.SetEditorLine,\n            editorLine,\n        });\n    }, 200), [dispatch, textAreaLineHeight]);\n    /* Adds/Removes event listener on 'scroll' depending on pane `isActive` */\n    useEffect(() => {\n        const node = ref.current;\n        isActive\n            ? node === null || node === void 0 ? void 0 : node.addEventListener(\"scroll\", handleScroll, { passive: true }) : node === null || node === void 0 ? void 0 : node.removeEventListener(\"scroll\", handleScroll);\n        return () => node === null || node === void 0 ? void 0 : node.removeEventListener(\"scroll\", handleScroll);\n    }, [isActive, handleScroll, ref]);\n}\nexport { useTrackEditorScroll };\n"],"sourceRoot":""}